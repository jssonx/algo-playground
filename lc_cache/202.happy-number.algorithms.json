{"id":202,"fid":202,"name":"Happy Number","slug":"happy-number","link":"https://leetcode.com/problems/happy-number/description/","percent":54.67927163609924,"level":"Easy","category":"algorithms","companies":["airbnb","twitter","uber"],"tags":["hash-table","math"],"totalAC":"1.1M","totalSubmit":"1.9M","likes":7907,"dislikes":991,"desc":"<p>Write an algorithm to determine if a number <code>n</code> is happy.</p>\n\n<p>A <strong>happy number</strong> is a number defined by the following process:</p>\n\n<ul>\n\t<li>Starting with any positive integer, replace the number by the sum of the squares of its digits.</li>\n\t<li>Repeat the process until the number equals 1 (where it will stay), or it <strong>loops endlessly in a cycle</strong> which does not include 1.</li>\n\t<li>Those numbers for which this process <strong>ends in 1</strong> are happy.</li>\n</ul>\n\n<p>Return <code>true</code> <em>if</em> <code>n</code> <em>is a happy number, and</em> <code>false</code> <em>if not</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 19\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\n1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isHappy(int n) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isHappy(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isHappy(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isHappy(self, n: int) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool isHappy(int n){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsHappy(int n) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {boolean}\n */\nvar isHappy = function(n) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Boolean}\ndef is_happy(n)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isHappy(_ n: Int) -> Bool {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isHappy(n int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isHappy(n: Int): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isHappy(n: Int): Boolean {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn is_happy(n: i32) -> bool {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Boolean\n     */\n    function isHappy($n) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function isHappy(n: number): boolean {\n\n};"},{"value":"erlang","text":"Erlang","defaultCode":"-spec is_happy(N :: integer()) -> boolean().\nis_happy(N) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec is_happy(n :: integer) :: boolean\n  def is_happy(n) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool isHappy(int n) {\n\n  }\n}"}],"testcase":"19","testable":true,"templateMeta":{"name":"isHappy","params":[{"name":"n","type":"integer"}],"return":{"type":"boolean"}}}