{"id":740,"fid":740,"name":"Delete and Earn","slug":"delete-and-earn","link":"https://leetcode.com/problems/delete-and-earn/description/","percent":57.16909680491621,"level":"Medium","category":"algorithms","tags":["dynamic-programming"],"totalAC":"254K","totalSubmit":"444.6K","likes":6158,"dislikes":325,"desc":"<p>You are given an integer array <code>nums</code>. You want to maximize the number of points you get by performing the following operation any number of times:</p>\n\n<ul>\n\t<li>Pick any <code>nums[i]</code> and delete it to earn <code>nums[i]</code> points. Afterwards, you must delete <b>every</b> element equal to <code>nums[i] - 1</code> and <strong>every</strong> element equal to <code>nums[i] + 1</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>maximum number of points</strong> you can earn by applying the above operation some number of times</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,4,2]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> You can perform the following operations:\n- Delete 4 to earn 4 points. Consequently, 3 is also deleted. nums = [2].\n- Delete 2 to earn 2 points. nums = [].\nYou earn a total of 6 points.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,2,3,3,3,4]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> You can perform the following operations:\n- Delete a 3 to earn 3 points. All 2&#39;s and 4&#39;s are also deleted. nums = [3,3].\n- Delete a 3 again to earn 3 points. nums = [3].\n- Delete a 3 once more to earn 3 points. nums = [].\nYou earn a total of 9 points.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int deleteAndEarn(vector<int>& nums) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int deleteAndEarn(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def deleteAndEarn(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def deleteAndEarn(self, nums: List[int]) -> int:\n        "},{"value":"c","text":"C","defaultCode":"int deleteAndEarn(int* nums, int numsSize){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int DeleteAndEarn(int[] nums) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar deleteAndEarn = function(nums) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Integer}\ndef delete_and_earn(nums)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func deleteAndEarn(_ nums: [Int]) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func deleteAndEarn(nums []int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def deleteAndEarn(nums: Array[Int]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun deleteAndEarn(nums: IntArray): Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn delete_and_earn(nums: Vec<i32>) -> i32 {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function deleteAndEarn($nums) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function deleteAndEarn(nums: number[]): number {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (delete-and-earn nums)\n  (-> (listof exact-integer?) exact-integer?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec delete_and_earn(Nums :: [integer()]) -> integer().\ndelete_and_earn(Nums) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec delete_and_earn(nums :: [integer]) :: integer\n  def delete_and_earn(nums) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int deleteAndEarn(List<int> nums) {\n\n  }\n}"}],"testcase":"[3,4,2]","testable":true,"templateMeta":{"name":"deleteAndEarn","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"integer"}}}