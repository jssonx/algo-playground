{"id":342,"fid":342,"name":"Power of Four","slug":"power-of-four","link":"https://leetcode.com/problems/power-of-four/description/","percent":45.94722629655693,"level":"Easy","category":"algorithms","companies":["twosigma"],"tags":["bit-manipulation"],"totalAC":"443.2K","totalSubmit":"962.2K","likes":2936,"dislikes":334,"desc":"<p>Given an integer <code>n</code>, return <em><code>true</code> if it is a power of four. Otherwise, return <code>false</code></em>.</p>\n\n<p>An integer <code>n</code> is a power of four, if there exists an integer <code>x</code> such that <code>n == 4<sup>x</sup></code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 16\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 5\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 1\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup> &lt;= n &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without loops/recursion?","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isPowerOfFour(int n) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isPowerOfFour(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isPowerOfFour(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isPowerOfFour(self, n: int) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool isPowerOfFour(int n){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsPowerOfFour(int n) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {boolean}\n */\nvar isPowerOfFour = function(n) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Boolean}\ndef is_power_of_four(n)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isPowerOfFour(_ n: Int) -> Bool {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func isPowerOfFour(n int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isPowerOfFour(n: Int): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isPowerOfFour(n: Int): Boolean {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn is_power_of_four(n: i32) -> bool {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Boolean\n     */\n    function isPowerOfFour($n) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function isPowerOfFour(n: number): boolean {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (is-power-of-four n)\n  (-> exact-integer? boolean?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec is_power_of_four(N :: integer()) -> boolean().\nis_power_of_four(N) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec is_power_of_four(n :: integer) :: boolean\n  def is_power_of_four(n) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool isPowerOfFour(int n) {\n\n  }\n}"}],"testcase":"16","testable":true,"templateMeta":{"name":"isPowerOfFour","params":[{"name":"n","type":"integer"}],"return":{"type":"boolean"}}}