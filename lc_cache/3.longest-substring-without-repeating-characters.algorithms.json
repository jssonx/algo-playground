{"id":3,"fid":3,"name":"Longest Substring Without Repeating Characters","slug":"longest-substring-without-repeating-characters","link":"https://leetcode.com/problems/longest-substring-without-repeating-characters/description/","percent":33.81428079082323,"level":"Medium","category":"algorithms","companies":["adobe","amazon","bloomberg","yelp"],"tags":["hash-table","two-pointers","string","sliding-window"],"totalAC":"4.3M","totalSubmit":"12.6M","likes":32078,"dislikes":1407,"desc":"<p>Given a string <code>s</code>, find the length of the <strong>longest</strong> <span data-keyword=\"substring-nonempty\"><strong>substring</strong></span> without repeating characters.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcabcbb&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;abc&quot;, with the length of 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bbbbb&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The answer is &quot;b&quot;, with the length of 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;pwwkew&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The answer is &quot;wke&quot;, with the length of 3.\nNotice that the answer must be a substring, &quot;pwke&quot; is a subsequence and not a substring.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of English letters, digits, symbols and spaces.</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def lengthOfLongestSubstring(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        "},{"value":"c","text":"C","defaultCode":"int lengthOfLongestSubstring(char * s){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int LengthOfLongestSubstring(string s) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {number}\n */\nvar lengthOfLongestSubstring = function(s) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {Integer}\ndef length_of_longest_substring(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func lengthOfLongestSubstring(_ s: String) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func lengthOfLongestSubstring(s string) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def lengthOfLongestSubstring(s: String): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun lengthOfLongestSubstring(s: String): Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn length_of_longest_substring(s: String) -> i32 {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function lengthOfLongestSubstring($s) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function lengthOfLongestSubstring(s: string): number {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (length-of-longest-substring s)\n  (-> string? exact-integer?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec length_of_longest_substring(S :: unicode:unicode_binary()) -> integer().\nlength_of_longest_substring(S) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec length_of_longest_substring(s :: String.t) :: integer\n  def length_of_longest_substring(s) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int lengthOfLongestSubstring(String s) {\n\n  }\n}"}],"testcase":"\"abcabcbb\"","testable":true,"templateMeta":{"name":"lengthOfLongestSubstring","params":[{"name":"s","type":"string"}],"return":{"type":"integer"}}}