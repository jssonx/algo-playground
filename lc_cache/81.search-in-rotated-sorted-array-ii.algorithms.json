{"id":81,"fid":81,"name":"Search in Rotated Sorted Array II","slug":"search-in-rotated-sorted-array-ii","link":"https://leetcode.com/problems/search-in-rotated-sorted-array-ii/description/","percent":35.722625833986385,"level":"Medium","category":"algorithms","tags":["array","binary-search"],"totalAC":"503.5K","totalSubmit":"1.4M","likes":5954,"dislikes":840,"desc":"<p>There is an integer array <code>nums</code> sorted in non-decreasing order (not necessarily with <strong>distinct</strong> values).</p>\n\n<p>Before being passed to your function, <code>nums</code> is <strong>rotated</strong> at an unknown pivot index <code>k</code> (<code>0 &lt;= k &lt; nums.length</code>) such that the resulting array is <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code> (<strong>0-indexed</strong>). For example, <code>[0,1,2,4,4,4,5,6,6,7]</code> might be rotated at pivot index <code>5</code> and become <code>[4,5,6,6,7,0,1,2,4,4]</code>.</p>\n\n<p>Given the array <code>nums</code> <strong>after</strong> the rotation and an integer <code>target</code>, return <code>true</code><em> if </em><code>target</code><em> is in </em><code>nums</code><em>, or </em><code>false</code><em> if it is not in </em><code>nums</code><em>.</em></p>\n\n<p>You must decrease the overall operation steps as much as possible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 0\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,5,6,0,0,1,2], target = 3\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>nums</code> is guaranteed to be rotated at some pivot.</li>\n\t<li><code>-10<sup>4</sup> &lt;= target &lt;= 10<sup>4</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> This problem is similar to&nbsp;<a href=\"/problems/search-in-rotated-sorted-array/description/\" target=\"_blank\">Search in Rotated Sorted Array</a>, but&nbsp;<code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool search(vector<int>& nums, int target) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean search(int[] nums, int target) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def search(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def search(self, nums: List[int], target: int) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool search(int* nums, int numsSize, int target){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool Search(int[] nums, int target) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {boolean}\n */\nvar search = function(nums, target) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @param {Integer} target\n# @return {Boolean}\ndef search(nums, target)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func search(_ nums: [Int], _ target: Int) -> Bool {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func search(nums []int, target int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def search(nums: Array[Int], target: Int): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun search(nums: IntArray, target: Int): Boolean {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn search(nums: Vec<i32>, target: i32) -> bool {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $target\n     * @return Boolean\n     */\n    function search($nums, $target) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function search(nums: number[], target: number): boolean {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (search nums target)\n  (-> (listof exact-integer?) exact-integer? boolean?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec search(Nums :: [integer()], Target :: integer()) -> boolean().\nsearch(Nums, Target) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec search(nums :: [integer], target :: integer) :: boolean\n  def search(nums, target) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool search(List<int> nums, int target) {\n\n  }\n}"}],"testcase":"[2,5,6,0,0,1,2]\n0","testable":true,"templateMeta":{"name":"search","params":[{"name":"nums","type":"integer[]"},{"name":"target","type":"integer"}],"return":{"type":"boolean"}}}