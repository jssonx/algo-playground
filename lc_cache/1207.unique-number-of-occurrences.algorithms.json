{"id":1319,"fid":1207,"name":"Unique Number of Occurrences","slug":"unique-number-of-occurrences","link":"https://leetcode.com/problems/unique-number-of-occurrences/description/","percent":73.51796906396696,"level":"Easy","category":"algorithms","totalAC":"263.2K","totalSubmit":"358.2K","likes":3386,"dislikes":75,"desc":"<p>Given an array of integers <code>arr</code>, return <code>true</code> <em>if the number of occurrences of each value in the array is <strong>unique</strong> or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,2,1,1,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [-3,0,1,-3,1,1,1,-3,10,0]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= arr[i] &lt;= 1000</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool uniqueOccurrences(vector<int>& arr) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean uniqueOccurrences(int[] arr) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def uniqueOccurrences(self, arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def uniqueOccurrences(self, arr: List[int]) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool uniqueOccurrences(int* arr, int arrSize){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool UniqueOccurrences(int[] arr) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} arr\n * @return {boolean}\n */\nvar uniqueOccurrences = function(arr) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} arr\n# @return {Boolean}\ndef unique_occurrences(arr)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func uniqueOccurrences(_ arr: [Int]) -> Bool {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func uniqueOccurrences(arr []int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def uniqueOccurrences(arr: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun uniqueOccurrences(arr: IntArray): Boolean {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn unique_occurrences(arr: Vec<i32>) -> bool {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $arr\n     * @return Boolean\n     */\n    function uniqueOccurrences($arr) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function uniqueOccurrences(arr: number[]): boolean {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (unique-occurrences arr)\n  (-> (listof exact-integer?) boolean?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec unique_occurrences(Arr :: [integer()]) -> boolean().\nunique_occurrences(Arr) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec unique_occurrences(arr :: [integer]) :: boolean\n  def unique_occurrences(arr) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool uniqueOccurrences(List<int> arr) {\n\n  }\n}"}],"testcase":"[1,2,2,1,1,3]","testable":true,"templateMeta":{"name":"uniqueOccurrences","params":[{"name":"arr","type":"integer[]"}],"return":{"type":"boolean"}}}