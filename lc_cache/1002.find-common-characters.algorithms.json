{"id":1044,"fid":1002,"name":"Find Common Characters","slug":"find-common-characters","link":"https://leetcode.com/problems/find-common-characters/description/","percent":68.41764412479284,"level":"Easy","category":"algorithms","tags":["array","hash-table"],"totalAC":"170.1K","totalSubmit":"248.6K","likes":2852,"dislikes":234,"desc":"<p>Given a string array <code>words</code>, return <em>an array of all characters that show up in all strings within the </em><code>words</code><em> (including duplicates)</em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> words = [\"bella\",\"label\",\"roller\"]\n<strong>Output:</strong> [\"e\",\"l\",\"l\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> words = [\"cool\",\"lock\",\"cook\"]\n<strong>Output:</strong> [\"c\",\"o\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 100</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    vector<string> commonChars(vector<string>& words) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public List<String> commonChars(String[] words) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def commonChars(self, words):\n        \"\"\"\n        :type words: List[str]\n        :rtype: List[str]\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def commonChars(self, words: List[str]) -> List[str]:\n        "},{"value":"c","text":"C","defaultCode":"/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nchar ** commonChars(char ** words, int wordsSize, int* returnSize){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public IList<string> CommonChars(string[] words) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string[]} words\n * @return {string[]}\n */\nvar commonChars = function(words) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String[]} words\n# @return {String[]}\ndef common_chars(words)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func commonChars(_ words: [String]) -> [String] {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func commonChars(words []string) []string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def commonChars(words: Array[String]): List[String] = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun commonChars(words: Array<String>): List<String> {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn common_chars(words: Vec<String>) -> Vec<String> {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String[] $words\n     * @return String[]\n     */\n    function commonChars($words) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function commonChars(words: string[]): string[] {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (common-chars words)\n  (-> (listof string?) (listof string?))\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec common_chars(Words :: [unicode:unicode_binary()]) -> [unicode:unicode_binary()].\ncommon_chars(Words) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec common_chars(words :: [String.t]) :: [String.t]\n  def common_chars(words) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  List<String> commonChars(List<String> words) {\n\n  }\n}"}],"testcase":"[\"bella\",\"label\",\"roller\"]","testable":true,"templateMeta":{"name":"commonChars","params":[{"name":"words","type":"string[]"}],"return":{"type":"list<string>"}}}