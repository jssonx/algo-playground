{"id":186,"fid":186,"name":"Reverse Words in a String II","slug":"reverse-words-in-a-string-ii","link":"https://leetcode.com/problems/reverse-words-in-a-string-ii/description/","percent":52.70447544845081,"level":"Medium","category":"algorithms","companies":["amazon","microsoft","uber"],"tags":["string"],"totalAC":"146.2K","totalSubmit":"276.9K","likes":955,"dislikes":135,"desc":"<p>Given a character array <code>s</code>, reverse the order of the <strong>words</strong>.</p>\n\n<p>A <strong>word</strong> is defined as a sequence of non-space characters. The <strong>words</strong> in <code>s</code> will be separated by a single space.</p>\n\n<p>Your code must solve the problem&nbsp;<strong>in-place,</strong> i.e. without allocating extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = [\"t\",\"h\",\"e\",\" \",\"s\",\"k\",\"y\",\" \",\"i\",\"s\",\" \",\"b\",\"l\",\"u\",\"e\"]\n<strong>Output:</strong> [\"b\",\"l\",\"u\",\"e\",\" \",\"i\",\"s\",\" \",\"s\",\"k\",\"y\",\" \",\"t\",\"h\",\"e\"]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = [\"a\"]\n<strong>Output:</strong> [\"a\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is an English letter (uppercase or lowercase), digit, or space <code>&#39; &#39;</code>.</li>\n\t<li>There is <strong>at least one</strong> word in <code>s</code>.</li>\n\t<li><code>s</code> does not contain leading or trailing spaces.</li>\n\t<li>All the words in <code>s</code> are guaranteed to be separated by a single space.</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    void reverseWords(vector<char>& s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public void reverseWords(char[] s) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def reverseWords(self, s):\n        \"\"\"\n        :type s: List[str]\n        :rtype: None Do not return anything, modify s in-place instead.\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def reverseWords(self, s: List[str]) -> None:\n        \"\"\"\n        Do not return anything, modify s in-place instead.\n        \"\"\"\n        "},{"value":"c","text":"C","defaultCode":"void reverseWords(char* s, int sSize){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public void ReverseWords(char[] s) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseWords = function(s) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Character[]} s\n# @return {Void} Do not return anything, modify s in-place instead.\ndef reverse_words(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func reverseWords(_ s: inout [Character]) {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func reverseWords(s []byte)  {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def reverseWords(s: Array[Char]): Unit = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun reverseWords(s: CharArray): Unit {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn reverse_words(s: &mut Vec<char>) {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String[] $s\n     * @return NULL\n     */\n    function reverseWords(&$s) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"/**\n Do not return anything, modify s in-place instead.\n */\nfunction reverseWords(s: string[]): void {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (reverse-words s)\n  (-> (listof char?) void?)\n\n  )"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  void reverseWords(List<String> s) {\n\n  }\n}"}],"testcase":"[\"t\",\"h\",\"e\",\" \",\"s\",\"k\",\"y\",\" \",\"i\",\"s\",\" \",\"b\",\"l\",\"u\",\"e\"]","testable":true,"templateMeta":{"name":"reverseWords","params":[{"name":"s","type":"character[]"}],"return":{"type":"void"},"output":{"paramindex":0}}}