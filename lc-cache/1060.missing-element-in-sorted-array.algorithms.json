{"id":1059,"fid":1060,"name":"Missing Element in Sorted Array","slug":"missing-element-in-sorted-array","link":"https://leetcode.com/problems/missing-element-in-sorted-array/description/","percent":54.708504884644434,"level":"Medium","category":"algorithms","tags":["binary-search"],"totalAC":"112.9K","totalSubmit":"206.1K","likes":1478,"dislikes":57,"desc":"<p>Given an integer array <code>nums</code> which is sorted in <strong>ascending order</strong> and all of its elements are <strong>unique</strong> and given also an integer <code>k</code>, return the <code>k<sup>th</sup></code> missing number starting from the leftmost number of the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,7,9,10], k = 1\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The first missing number is 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,7,9,10], k = 3\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> The missing numbers are [5,6,8,...], hence the third missing number is 8.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,4], k = 3\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The missing numbers are [3,5,6,7,...], hence the third missing number is 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>7</sup></code></li>\n\t<li><code>nums</code> is sorted in <strong>ascending order,</strong> and all the elements are <strong>unique</strong>.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>8</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Can you find a logarithmic time complexity (i.e., <code>O(log(n))</code>) solution?","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int missingElement(vector<int>& nums, int k) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int missingElement(int[] nums, int k) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def missingElement(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def missingElement(self, nums: List[int], k: int) -> int:\n        "},{"value":"c","text":"C","defaultCode":"int missingElement(int* nums, int numsSize, int k){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MissingElement(int[] nums, int k) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar missingElement = function(nums, k) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef missing_element(nums, k)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func missingElement(_ nums: [Int], _ k: Int) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func missingElement(nums []int, k int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def missingElement(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun missingElement(nums: IntArray, k: Int): Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn missing_element(nums: Vec<i32>, k: i32) -> i32 {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function missingElement($nums, $k) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function missingElement(nums: number[], k: number): number {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (missing-element nums k)\n  (-> (listof exact-integer?) exact-integer? exact-integer?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec missing_element(Nums :: [integer()], K :: integer()) -> integer().\nmissing_element(Nums, K) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec missing_element(nums :: [integer], k :: integer) :: integer\n  def missing_element(nums, k) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int missingElement(List<int> nums, int k) {\n\n  }\n}"}],"testcase":"[4,7,9,10]\n1","testable":true,"templateMeta":{"name":"missingElement","params":[{"name":"nums","type":"integer[]"},{"name":"k","type":"integer"}],"return":{"type":"integer"}}}