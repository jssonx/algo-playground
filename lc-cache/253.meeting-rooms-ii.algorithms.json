{"id":253,"fid":253,"name":"Meeting Rooms II","slug":"meeting-rooms-ii","link":"https://leetcode.com/problems/meeting-rooms-ii/description/","percent":50.528473807139584,"level":"Medium","category":"algorithms","companies":["facebook","google","snapchat"],"tags":["heap","greedy","sort"],"totalAC":"757.4K","totalSubmit":"1.5M","likes":6339,"dislikes":136,"desc":"<p>Given an array of meeting time intervals <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code>, return <em>the minimum number of conference rooms required</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> intervals = [[0,30],[5,10],[15,20]]\n<strong>Output:</strong> 2\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> intervals = [[7,10],[2,4]]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt; end<sub>i</sub> &lt;= 10<sup>6</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int minMeetingRooms(vector<vector<int>>& intervals) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minMeetingRooms(int[][] intervals) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minMeetingRooms(self, intervals):\n        \"\"\"\n        :type intervals: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minMeetingRooms(self, intervals: List[List[int]]) -> int:\n        "},{"value":"c","text":"C","defaultCode":"int minMeetingRooms(int** intervals, int intervalsSize, int* intervalsColSize){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MinMeetingRooms(int[][] intervals) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nvar minMeetingRooms = function(intervals) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[][]} intervals\n# @return {Integer}\ndef min_meeting_rooms(intervals)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minMeetingRooms(_ intervals: [[Int]]) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func minMeetingRooms(intervals [][]int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minMeetingRooms(intervals: Array[Array[Int]]): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minMeetingRooms(intervals: Array<IntArray>): Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn min_meeting_rooms(intervals: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[][] $intervals\n     * @return Integer\n     */\n    function minMeetingRooms($intervals) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function minMeetingRooms(intervals: number[][]): number {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (min-meeting-rooms intervals)\n  (-> (listof (listof exact-integer?)) exact-integer?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec min_meeting_rooms(Intervals :: [[integer()]]) -> integer().\nmin_meeting_rooms(Intervals) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec min_meeting_rooms(intervals :: [[integer]]) :: integer\n  def min_meeting_rooms(intervals) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int minMeetingRooms(List<List<int>> intervals) {\n\n  }\n}"}],"testcase":"[[0,30],[5,10],[15,20]]","testable":true,"templateMeta":{"name":"minMeetingRooms","params":[{"name":"intervals","type":"integer[][]"}],"return":{"type":"integer"}}}