{"id":214,"fid":214,"name":"Shortest Palindrome","slug":"shortest-palindrome","link":"https://leetcode.com/problems/shortest-palindrome/description/","percent":32.32742091134738,"level":"Hard","category":"algorithms","companies":["google","pocketgems"],"tags":["string"],"totalAC":"154.5K","totalSubmit":"477.6K","likes":3094,"dislikes":218,"desc":"<p>You are given a string <code>s</code>. You can convert <code>s</code> to a <span data-keyword=\"palindrome-string\">palindrome</span> by adding characters in front of it.</p>\n\n<p>Return <em>the shortest palindrome you can find by performing this transformation</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"aacecaaa\"\n<strong>Output:</strong> \"aaacecaaa\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"abcd\"\n<strong>Output:</strong> \"dcbabcd\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> consists of lowercase English letters only.</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string shortestPalindrome(string s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String shortestPalindrome(String s) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def shortestPalindrome(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def shortestPalindrome(self, s: str) -> str:\n        "},{"value":"c","text":"C","defaultCode":"char * shortestPalindrome(char * s){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string ShortestPalindrome(string s) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {string}\n */\nvar shortestPalindrome = function(s) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {String}\ndef shortest_palindrome(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func shortestPalindrome(_ s: String) -> String {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func shortestPalindrome(s string) string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def shortestPalindrome(s: String): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun shortestPalindrome(s: String): String {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn shortest_palindrome(s: String) -> String {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function shortestPalindrome($s) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function shortestPalindrome(s: string): string {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (shortest-palindrome s)\n  (-> string? string?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec shortest_palindrome(S :: unicode:unicode_binary()) -> unicode:unicode_binary().\nshortest_palindrome(S) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec shortest_palindrome(s :: String.t) :: String.t\n  def shortest_palindrome(s) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  String shortestPalindrome(String s) {\n\n  }\n}"}],"testcase":"\"aacecaaa\"","testable":true,"templateMeta":{"name":"shortestPalindrome","params":[{"name":"s","type":"string"}],"return":{"type":"string"}}}