{"id":953,"fid":917,"name":"Reverse Only Letters","slug":"reverse-only-letters","link":"https://leetcode.com/problems/reverse-only-letters/description/","percent":61.94804284869056,"level":"Easy","category":"algorithms","tags":["string"],"totalAC":"162.1K","totalSubmit":"261K","likes":1841,"dislikes":62,"desc":"<p>Given a string <code>s</code>, reverse the string according to the following rules:</p>\n\n<ul>\n\t<li>All the characters that are not English letters remain in the same position.</li>\n\t<li>All the English letters (lowercase or uppercase) should be reversed.</li>\n</ul>\n\n<p>Return <code>s</code><em> after reversing it</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"ab-cd\"\n<strong>Output:</strong> \"dc-ba\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"a-bC-dEf-ghIj\"\n<strong>Output:</strong> \"j-Ih-gfE-dCba\"\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> s = \"Test1ng-Leet=code-Q!\"\n<strong>Output:</strong> \"Qedo1ct-eeLg=ntse-T!\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists of characters with ASCII values in the range <code>[33, 122]</code>.</li>\n\t<li><code>s</code> does not contain <code>&#39;\\&quot;&#39;</code> or <code>&#39;\\\\&#39;</code>.</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string reverseOnlyLetters(string s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String reverseOnlyLetters(String s) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def reverseOnlyLetters(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def reverseOnlyLetters(self, s: str) -> str:\n        "},{"value":"c","text":"C","defaultCode":"char * reverseOnlyLetters(char * s){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string ReverseOnlyLetters(string s) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {string}\n */\nvar reverseOnlyLetters = function(s) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {String}\ndef reverse_only_letters(s)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func reverseOnlyLetters(_ s: String) -> String {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func reverseOnlyLetters(s string) string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def reverseOnlyLetters(s: String): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun reverseOnlyLetters(s: String): String {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn reverse_only_letters(s: String) -> String {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function reverseOnlyLetters($s) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function reverseOnlyLetters(s: string): string {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (reverse-only-letters s)\n  (-> string? string?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec reverse_only_letters(S :: unicode:unicode_binary()) -> unicode:unicode_binary().\nreverse_only_letters(S) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec reverse_only_letters(s :: String.t) :: String.t\n  def reverse_only_letters(s) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  String reverseOnlyLetters(String s) {\n\n  }\n}"}],"testcase":"\"ab-cd\"","testable":true,"templateMeta":{"name":"reverseOnlyLetters","params":[{"name":"s","type":"string"}],"return":{"type":"string"}}}