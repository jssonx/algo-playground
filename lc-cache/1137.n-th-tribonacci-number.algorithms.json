{"id":1236,"fid":1137,"tags":["dynamic-programming"],"name":"N-th Tribonacci Number","slug":"n-th-tribonacci-number","link":"https://leetcode.com/problems/n-th-tribonacci-number/description/","percent":63.80394751413376,"level":"Easy","category":"algorithms","totalAC":"456.6K","totalSubmit":"715.5K","likes":3355,"dislikes":154,"desc":"<p>The Tribonacci sequence T<sub>n</sub> is defined as follows:&nbsp;</p>\r\n\r\n<p>T<sub>0</sub> = 0, T<sub>1</sub> = 1, T<sub>2</sub> = 1, and T<sub>n+3</sub> = T<sub>n</sub> + T<sub>n+1</sub> + T<sub>n+2</sub> for n &gt;= 0.</p>\r\n\r\n<p>Given <code>n</code>, return the value of T<sub>n</sub>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 4\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong>\r\nT_3 = 0 + 1 + 1 = 2\r\nT_4 = 1 + 1 + 2 = 4\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 25\r\n<strong>Output:</strong> 1389537\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= n &lt;= 37</code></li>\r\n\t<li>The answer is guaranteed to fit within a 32-bit integer, ie. <code>answer &lt;= 2^31 - 1</code>.</li>\r\n</ul>","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int tribonacci(int n) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int tribonacci(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def tribonacci(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def tribonacci(self, n: int) -> int:\n        "},{"value":"c","text":"C","defaultCode":"\n\nint tribonacci(int n){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int Tribonacci(int n) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {number}\n */\nvar tribonacci = function(n) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Integer}\ndef tribonacci(n)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func tribonacci(_ n: Int) -> Int {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func tribonacci(n int) int {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def tribonacci(n: Int): Int = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun tribonacci(n: Int): Int {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn tribonacci(n: i32) -> i32 {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function tribonacci($n) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function tribonacci(n: number): number {\n\n};"}],"testcase":"4","testable":true,"templateMeta":{"name":"tribonacci","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}