{"id":217,"fid":217,"name":"Contains Duplicate","slug":"contains-duplicate","link":"https://leetcode.com/problems/contains-duplicate/description/","percent":61.41169675228119,"level":"Easy","category":"algorithms","companies":["airbnb","palantir","yahoo"],"tags":["array","hash-table"],"totalAC":"2.6M","totalSubmit":"4.3M","likes":8835,"dislikes":1128,"desc":"<p>Given an integer array <code>nums</code>, return <code>true</code> if any value appears <strong>at least twice</strong> in the array, and return <code>false</code> if every element is distinct.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,1]\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1,1,1,3,3,4,3,2,4,2]\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool containsDuplicate(vector<int>& nums) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean containsDuplicate(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def containsDuplicate(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def containsDuplicate(self, nums: List[int]) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool containsDuplicate(int* nums, int numsSize){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool ContainsDuplicate(int[] nums) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar containsDuplicate = function(nums) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Boolean}\ndef contains_duplicate(nums)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func containsDuplicate(_ nums: [Int]) -> Bool {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func containsDuplicate(nums []int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def containsDuplicate(nums: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun containsDuplicate(nums: IntArray): Boolean {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn contains_duplicate(nums: Vec<i32>) -> bool {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function containsDuplicate($nums) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function containsDuplicate(nums: number[]): boolean {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (contains-duplicate nums)\n  (-> (listof exact-integer?) boolean?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec contains_duplicate(Nums :: [integer()]) -> boolean().\ncontains_duplicate(Nums) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec contains_duplicate(nums :: [integer]) :: boolean\n  def contains_duplicate(nums) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool containsDuplicate(List<int> nums) {\n\n  }\n}"}],"testcase":"[1,2,3,1]","testable":true,"templateMeta":{"name":"containsDuplicate","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"boolean"}}}