{"id":823,"fid":805,"name":"Split Array With Same Average","slug":"split-array-with-same-average","link":"https://leetcode.com/problems/split-array-with-same-average/description/","percent":25.7647983237297,"level":"Hard","category":"algorithms","tags":["math"],"totalAC":"29.8K","totalSubmit":"116K","likes":1080,"dislikes":128,"desc":"<p>You are given an integer array <code>nums</code>.</p>\n\n<p>You should move each element of <code>nums</code> into one of the two arrays <code>A</code> and <code>B</code> such that <code>A</code> and <code>B</code> are non-empty, and <code>average(A) == average(B)</code>.</p>\n\n<p>Return <code>true</code> if it is possible to achieve that and <code>false</code> otherwise.</p>\n\n<p><strong>Note</strong> that for an array <code>arr</code>, <code>average(arr)</code> is the sum of all the elements of <code>arr</code> over the length of <code>arr</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5,6,7,8]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have an average of 4.5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1]\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 30</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool splitArraySameAverage(vector<int>& nums) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean splitArraySameAverage(int[] nums) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def splitArraySameAverage(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def splitArraySameAverage(self, nums: List[int]) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool splitArraySameAverage(int* nums, int numsSize){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool SplitArraySameAverage(int[] nums) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar splitArraySameAverage = function(nums) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Boolean}\ndef split_array_same_average(nums)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func splitArraySameAverage(_ nums: [Int]) -> Bool {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func splitArraySameAverage(nums []int) bool {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def splitArraySameAverage(nums: Array[Int]): Boolean = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun splitArraySameAverage(nums: IntArray): Boolean {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn split_array_same_average(nums: Vec<i32>) -> bool {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function splitArraySameAverage($nums) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function splitArraySameAverage(nums: number[]): boolean {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (split-array-same-average nums)\n  (-> (listof exact-integer?) boolean?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec split_array_same_average(Nums :: [integer()]) -> boolean().\nsplit_array_same_average(Nums) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec split_array_same_average(nums :: [integer]) :: boolean\n  def split_array_same_average(nums) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool splitArraySameAverage(List<int> nums) {\n\n  }\n}"}],"testcase":"[1,2,3,4,5,6,7,8]","testable":true,"templateMeta":{"name":"splitArraySameAverage","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"boolean"}}}