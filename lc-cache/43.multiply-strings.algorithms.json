{"id":43,"fid":43,"name":"Multiply Strings","slug":"multiply-strings","link":"https://leetcode.com/problems/multiply-strings/description/","percent":38.9980417978529,"level":"Medium","category":"algorithms","companies":["facebook","twitter"],"tags":["math","string"],"totalAC":"638.7K","totalSubmit":"1.6M","likes":5909,"dislikes":2635,"desc":"<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n\n<p><strong>Note:</strong>&nbsp;You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\"\n<strong>Output:</strong> \"6\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\"\n<strong>Output:</strong> \"56088\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n\t<li><code>num1</code> and <code>num2</code> consist of digits only.</li>\n\t<li>Both <code>num1</code> and <code>num2</code>&nbsp;do not contain any leading zero, except the number <code>0</code> itself.</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string multiply(string num1, string num2) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String multiply(String num1, String num2) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def multiply(self, num1, num2):\n        \"\"\"\n        :type num1: str\n        :type num2: str\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def multiply(self, num1: str, num2: str) -> str:\n        "},{"value":"c","text":"C","defaultCode":"char * multiply(char * num1, char * num2){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string Multiply(string num1, string num2) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} num1\n * @param {string} num2\n * @return {string}\n */\nvar multiply = function(num1, num2) {\n    \n};"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} num1\n# @param {String} num2\n# @return {String}\ndef multiply(num1, num2)\n    \nend"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func multiply(_ num1: String, _ num2: String) -> String {\n        \n    }\n}"},{"value":"golang","text":"Go","defaultCode":"func multiply(num1 string, num2 string) string {\n    \n}"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def multiply(num1: String, num2: String): String = {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun multiply(num1: String, num2: String): String {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn multiply(num1: String, num2: String) -> String {\n        \n    }\n}"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $num1\n     * @param String $num2\n     * @return String\n     */\n    function multiply($num1, $num2) {\n        \n    }\n}"},{"value":"typescript","text":"TypeScript","defaultCode":"function multiply(num1: string, num2: string): string {\n\n};"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (multiply num1 num2)\n  (-> string? string? string?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec multiply(Num1 :: unicode:unicode_binary(), Num2 :: unicode:unicode_binary()) -> unicode:unicode_binary().\nmultiply(Num1, Num2) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec multiply(num1 :: String.t, num2 :: String.t) :: String.t\n  def multiply(num1, num2) do\n\n  end\nend"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  String multiply(String num1, String num2) {\n\n  }\n}"}],"testcase":"\"2\"\n\"3\"","testable":true,"templateMeta":{"name":"multiply","params":[{"name":"num1","type":"string"},{"name":"num2","type":"string"}],"return":{"type":"string"}}}